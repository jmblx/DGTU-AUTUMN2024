"""empty message

Revision ID: 0cb7b6845785
Revises: b9f9467e8485
Create Date: 2024-10-27 11:21:06.039134

"""
from datetime import datetime
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import table, column, String, Integer, Float, DateTime, Boolean


# revision identifiers, used by Alembic.
revision: str = '0cb7b6845785'
down_revision: Union[str, None] = 'b9f9467e8485'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('exp', sa.Integer(), nullable=True))
    user_table = table(
        "user",
        column("id", String),
        column("first_name", String),
        column("last_name", String),
        column("email", String),
        column("balance", Float),
        column("exp", Integer),
        column("registered_at", DateTime),
        column("role_id", Integer),
        column("address", String)
    )

    user_achievement_table = table(
        "user_achievement",
        column("user_id", String),
        column("achievement_id", Integer),
        column("progress", Float),
        column("achieved_time", DateTime),
    )

    user_reward_table = table(
        "user_reward",
        column("user_id", String),
        column("reward_id", Integer),
        column("amount", Integer),
        column("is_used", Boolean),
        column("received_date", DateTime),
    )

    # Вставка пользователя
    op.bulk_insert(
        user_table,
        [
            {
                "id": "cTqj1BzxfWS9gQGgn033WIcmn4e2",
                "first_name": "Egor",
                "last_name": "Ybica",
                "email": "zhora.zhilin.06@mail.ru",
                "balance": 100.0,
                "exp": 200,
                "role_id": 1,
                "address": "1-го Гвардейского авиаполка, площадь; Советский район Ростова-на-Дону.",

                "registered_at": datetime.utcnow(),
            }
        ]
    )

    # Связывание пользователя с достижениями, предположим, что достижения с id 1, 2 и 3 уже существуют в БД
    op.bulk_insert(
        user_achievement_table,
        [
            {"user_id": "cTqj1BzxfWS9gQGgn033WIcmn4e2", "achievement_id": 1, "progress": 3,
             "achieved_time": datetime.utcnow()},
            {"user_id": "cTqj1BzxfWS9gQGgn033WIcmn4e2", "achievement_id": 2, "progress": 10,
             "achieved_time": datetime.utcnow()},
            {"user_id": "cTqj1BzxfWS9gQGgn033WIcmn4e2", "achievement_id": 3, "progress": 20,
             "achieved_time": datetime.utcnow()},
        ]
    )

    # Связывание пользователя с наградами, предположим, что награды с id 1, 2 и 6 уже существуют в БД
    op.bulk_insert(
        user_reward_table,
        [
            {"user_id": "cTqj1BzxfWS9gQGgn033WIcmn4e2", "reward_id": 1, "amount": 10, "is_used": False,
             "received_date": datetime.utcnow()},
            {"user_id": "cTqj1BzxfWS9gQGgn033WIcmn4e2", "reward_id": 2, "amount": 50, "is_used": False,
             "received_date": datetime.utcnow()},
            {"user_id": "cTqj1BzxfWS9gQGgn033WIcmn4e2", "reward_id": 6, "amount": 1, "is_used": False,
             "received_date": datetime.utcnow()},
        ]
    )

    def downgrade():
        # Удаление связей в случае отката миграции
        op.execute("DELETE FROM user_reward WHERE user_id = 'cTqj1BzxfWS9gQGgn033WIcmn4e2'")
        op.execute("DELETE FROM user_achievement WHERE user_id = 'cTqj1BzxfWS9gQGgn033WIcmn4e2'")
        op.execute("DELETE FROM user WHERE id = 'cTqj1BzxfWS9gQGgn033WIcmn4e2'")

    op.drop_column('user', 'exp')
    # ### end Alembic commands ###
